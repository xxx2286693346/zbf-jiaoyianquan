<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zbf.user.mapper.BaseUserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zbf.common.entity.my.BaseUser">
        <id column="id" property="id" />
        <result column="version" property="version" />
        <result column="userName" property="userName" />
        <result column="loginName" property="loginName" />
        <result column="passWord" property="passWord" />
        <result column="tel" property="tel" />
        <result column="buMen" property="buMen" />
        <result column="salt" property="salt" />
        <result column="createTime" property="createTime" />
        <result column="updateTime" property="updateTime" />
        <result column="sex" property="sex" />
        <result column="email" property="email" />
    </resultMap>




    <resultMap id="mapVo" type="com.zbf.common.entity.my.BaseUser">
        <id column="id" property="id" />
        <result column="version" property="version" />
        <result column="userName" property="userName" />
        <result column="loginName" property="loginName" />
        <result column="passWord" property="passWord" />
        <result column="tel" property="tel" />
        <result column="buMen" property="buMen" />
        <result column="salt" property="salt" />
        <result column="createTime" property="createTime" />
        <result column="updateTime" property="updateTime" />
        <result column="sex" property="sex" />
        <result column="email" property="email" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, version, userName, loginName, passWord, tel, buMen, salt, createTime, updateTime, sex, email
    </sql>

    <insert id="adduserrole">
        INSERT into base_user_role(roleId,userId) values(3,#{id})
    </insert>

    <select id="maxid" resultType="com.zbf.common.entity.my.BaseUser">
        SELECT * FROM base_user ORDER BY id DESC LIMIT 0,1
    </select>


    <select id="listpage" resultMap="mapVo">
            select * from base_user
            <where>
            <if test="vo!=null">
                <if test="vo.userName!=null and vo.userName!='' ">
                    userName like concat('%',#{vo.userName},'%')
                </if>
                <if test="vo.loginName!=null and vo.loginName!='' ">
                    AND loginName like concat('%',#{vo.loginName},'%')
                </if>
                <if test="vo.tel!=null and vo.tel!='' ">
                    AND tel=#{vo.tel}
                </if>
            </if>
            </where>
        ORDER BY createTime DESC
    </select>


    <select id="finloginName" resultType="com.zbf.common.entity.my.BaseUser">
SELECT
	bu.*,
	GROUP_CONCAT( br.`name` ) rname
FROM
	base_user bu
	INNER JOIN base_user_role bur ON bu.id = bur.userId
	INNER JOIN base_role br ON bur.roleId = br.id
WHERE
	bu.loginName = #{loginName }

    </select>


    <update id="updatestatus">
        update base_user set status=#{status} where id=#{id}
    </update>



    <select id="getlist" resultType="com.zbf.common.entity.my.BaseUser">
            SELECT
bu.id,
	bu.${names}
	<if test="rname!=null and rname!=''">
        GROUP_CONCAT(br.`name`) rname
    </if>

FROM
	base_user bu
LEFT JOIN base_user_role bur ON bu.id = bur.userId
LEFT JOIN base_role br ON bur.roleId = br.id
GROUP BY
	bu.id
ORDER BY ${ord} ${pai} LIMIT 0,${limi}
    </select>

</mapper>
